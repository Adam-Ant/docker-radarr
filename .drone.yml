pipeline:
  identify:
    image: docker
    commands:
      # Grab the current version, prevents race conditions
      - apk add --no-cache curl jq
      - curl -fL http://services.sonarr.tv/v1/update/master?os=linux
            | tee /dev/stderr
            | jq -r '.updatePackage.version' > .sonarr_tag

  build:
    image: docker
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker build
            --no-cache --pull
            --build-arg SONARR_TAG=$(cat .sonarr_tag)
            -t sonarr-dev .

  test:
    image: docker
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - apk add --no-cache curl
      - CON_NAME=$(docker run -dt -e UID=0 sonarr-dev)
      - timeout -t 12 -- docker logs -f $$CON_NAME | cat &
      - sleep 10
      - IP=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $$CON_NAME)
      - if [ -z "$IP" ]; then
            echo "The container exited.. sadpanda";
            docker inspect --format='{{.State.ExitCode}}' $$CON_NAME;
            docker rm $$CON_NAME
            exit 25;
        fi
      - curl -L --retry-max-time 30 --max-time 5 --retry 10 --retry-delay 5 --retry-connrefused $IP:8989 > /dev/null
      - docker kill $$CON_NAME
      - docker rm $$CON_NAME

  publish:
    image: spritsail/docker-publish
    volumes: [ '/var/run/docker.sock:/var/run/docker.sock' ]
    secrets: [ docker_username, docker_password, microbadger_token ]
    when: { event: [ push, tag, deployment ] }
    from: sonarr-dev
    repo: spritsail/sonarr
    tags:
      - 'latest'
      - '%fileauto: .sonarr_tag'

  notify:
    image: appleboy/drone-telegram
    when: { status: [ success, failure ] }
    secrets: [ telegram_token, telegram_to ]
    message: |
      *{{repo.owner}}/{{repo.name}} [{{commit.branch}}]*: Build #{{build.number}}: *{{uppercase build.status}}*
      {{build.link}}
